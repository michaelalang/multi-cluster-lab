---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: istio-system
    app.kubernetes.io/managed-by: maistra-istio-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 2.4.5-1-3
    maistra-version: 2.4.5
    maistra.io/owner: istio-system
    maistra.io/owner-name: basic
    release: istio
  name: prometheus
  namespace: istio-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        app: prometheus
        maistra-control-plane: istio-system
        release: istio
    spec:
      containers:
      - args:
        - -provider=openshift
        - -https-address=:3001
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:9090
        - -htpasswd-file=/etc/proxy/htpasswd/auth
        - -display-htpasswd-form=false
        - '-openshift-sar={"namespace": "istio-system", "resource": "pods", "verb":
          "get"}'
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -openshift-service-account=prometheus
        - -cookie-secret-file=/etc/proxy/secrets/session_secret
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:652cc1022714aa53983339251d81d0610fba78c8b557dd4eedf831126ce3b51d
        imagePullPolicy: IfNotPresent
        name: prometheus-proxy
        ports:
        - containerPort: 3001
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: https
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-prometheus-tls
        - mountPath: /etc/proxy/htpasswd
          name: secret-htpasswd
        - mountPath: /etc/proxy/secrets
          name: secret-prometheus-proxy
        - mountPath: /etc/pki/ca-trust/extracted/pem/
          name: trusted-ca-bundle
          readOnly: true
      - args:
        - --storage.tsdb.retention.time=6h
        - --storage.tsdb.path=/prometheus
        - --config.file=/etc/prometheus/config/prometheus.yml
        - --web.enable-lifecycle
        - --web.enable-remote-write-receiver
        image: registry.redhat.io/openshift4/ose-prometheus@sha256:cc3ce5535d7b366ac59c4874299d4425b59e5ce8edaae701cf38f83e93408943
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: web
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config-volume
        - mountPath: /prometheus
          name: prometheus-db-volume
      - args:
        - --watch-interval=10s
        - --reload-url=http://localhost:9090/-/reload
        - --config-file=/etc/prometheus/config/prometheus.yml
        command:
        - /bin/prometheus-config-reloader
        image: registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:d43acff570deec0eb9fa8066bf4274dfdbd56436faf0d468a9c1cd4bd9a7efc1
        imagePullPolicy: IfNotPresent
        name: config-reloader
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config-volume
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - --watch-interval=0
        - --reload-url=http://localhost:9090/-/reload
        - --config-file=/etc/prometheus/config/prometheus.yml
        command:
        - /bin/prometheus-config-reloader
        image: registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:d43acff570deec0eb9fa8066bf4274dfdbd56436faf0d468a9c1cd4bd9a7efc1
        imagePullPolicy: IfNotPresent
        name: init-config-reloader
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config-volume
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: prometheus
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 30
      volumes:
      - name: secret-prometheus-tls
        secret:
          defaultMode: 420
          secretName: prometheus-tls
      - name: secret-htpasswd
        secret:
          defaultMode: 420
          items:
          - key: auth
            path: auth
          secretName: htpasswd
      - name: secret-prometheus-proxy
        secret:
          defaultMode: 420
          secretName: prometheus-proxy
      - configMap:
          defaultMode: 420
          items:
          - key: ca-bundle.crt
            path: tls-ca-bundle.pem
          name: trusted-ca-bundle
          optional: true
        name: trusted-ca-bundle
      - configMap:
          defaultMode: 420
          name: istio-basic
          optional: true
        name: istio-config-volume
      - configMap:
          defaultMode: 420
          name: prometheus
        name: config-volume
      - emptyDir: {}
        name: prometheus-db-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: istio-system
    app.kubernetes.io/managed-by: maistra-istio-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 2.4.5-1-3
    maistra-version: 2.4.5
    maistra.io/owner: istio-system
    maistra.io/owner-name: basic
    release: istio
  name: prometheus-remote-write
  namespace: istio-system
spec:
  ports:
  - name: http-prometheus
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: prometheus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: prometheus
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: istio-system
    app.kubernetes.io/managed-by: maistra-istio-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 2.4.5-1-3
    maistra-version: 2.4.5
    maistra.io/owner: istio-system
    maistra.io/owner-name: basic
    release: istio
  name: prometheus-remote
  namespace: istio-system
spec:
  host: prometheus.apps.west.example.com
  port:
    targetPort: http-prometheus
  to:
    kind: Service
    name: prometheus-remote-write
    weight: 100
  wildcardPolicy: None
